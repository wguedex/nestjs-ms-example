version: '3'

services:

  nats-server:
    image: nats:latest
    ports:
      - 8222:8222

  client-gateway:
    build: ./clientGW-ms-example
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./clientGW-ms-example/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=nats://nats-server:4222
    
  products-ms:
    build: ./products-ms-example
    volumes:
      - ./products-ms-example/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3001
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=file:./dev.db

  orders-ms:
    build: ./orders-ms-example
    volumes:
      - ./orders-ms-example/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - name=value
      - PORT=3002
      - DATABASE_URL=postgresql://${DB_USERNAME}:${DB_PASSWORD}@orders-db:5432/${DB_NAME}?schema=public
      - NATS_SERVERS=nats://nats-server:4222 
    depends_on:
      - orders-db
   
  orders-db:
    container_name: ordersdb
    image: postgres:alpine3.20
    restart: always
    volumes:
      - ./orders-ms-example/postgres:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}


# Payments Microservice
  payments-ms:
    container_name: payments-ms
    build: ./payments-ms-example
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./payments-ms-example/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${PAYMENTS_MS_PORT}
      - NATS_SERVERS=nats://nats-server:4222 
      - STRIPE_SECRET=${STRIPE_SECRET}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}      